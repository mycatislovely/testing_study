<!--VARIABLES {"title": "О курсе", "SORT_ORDER": "10", 
"code": "about_the_course"}-->

[TOC]

----------------------------------------------------------------------------------------------------
# О курсе

Курс начат 21.03.2023 г.

# Прикладное программное обеспечение

Прикладное ПО (или приложение) — «вспомогательная программа», предназначенная для выполнения
определенных задач и рассчитанная на непосредственное взаимодействие с пользователем. 

**Пользователь <-> Программа <-> Операционная система <-> Оборудование**

----------------------------------------------------------------------------------------------------
<!--i ["тестировщик По"]-->
# Тестировщик ПО 

Тестировщик ПО — специалист, который занимается тестированием программного обеспечения.
Тестировщик ищет дефекты, оформляет их и передает разработчику для исправления. Контролирует
корректность исправления дефекта Тестировщик проверяет готовую программу на соответствие требованиям
Тестировщик предоставляет информацию о качестве продукта.

**Тестировщик и пользователь**

В сущности, тестировщик работает на пользователей продукта. Их удовлетворение является
приоритетной задачей всей команды и, конечно же, тестировщика.

**Тестировщик и Заказчик**  

Заказчик диктует требования. Тестировщик контролирует, чтобы требования были выполнены.
Иногда, Заказчик = Пользователь

**Тестировщик и Руководитель проекта**

Руководитель проекта обязан быть в курсе ситуации по всем выполняемым работам на проекте.
Тестировщик должен, по запросу извещать РП о статусе тестирования, об обнаруженных серьезных
проблемах.

**Тестировщик и Разработчик**

Тестировщик облегчает работу разработчика, сообщая ему о его ошибках. От тестировщика требуется как
можно быстрее и точнее указать место ошибки - оформить баг-репорт. Даже если ошибок нет, задача
разработчика будет считаться выполненной после подтверждения тестировщиком.

**Тестировщик и Техническая поддержка**

Тестировщик сообщает тех.поддержке о проблемах, к которым нужно подготовить пользователя.
Тестировщик принимает дефекты которые обработала тех.поддержка. Можно вести общение с пользователем 
через тех.поддержку.

**Тестировщик и Технический писатель**

Специалисты, пишущие руководства, получают неполную информацию о продукте. Тестировщик может лучше 
объяснить им, как работает программа и предостеречь от тех или иных ошибок в документации.

**Тестировщик и Аналитик**

Тестировщик может уточнить требования у аналитика. Аналитик может уточнить поведение программы у
тестировщика и скорректировать требования. Тестировщик может предложить улучшение.


## Обязанности тестировщика ПО

- Подготовка проверок
- Тестирование задач
- Поиск и фиксация дефектов
- Проверка исправления дефектов
- Отправка дефектов найденных пользователями в работу
- Предоставление информации о о тестировании


## Необходимые тестировщику навыки

- Навыки в тестировании (Testings Skills)
- Навыки в технической области (Tech Skills)
- Социальные навыки (Soft Skills)
- Уровень знания языков (Language Skills)

----------------------------------------------------------------------------------------------------
<!--i ["testings Skills"]-->
# Testings Skills 

**Ручное тестирование**

- Тестирование по готовым тестам
- Тест-анализ
- Тестирование требований
- Исследовательское тестирование

**Автоматизированное тестирование**

- Методология автоматизированного тестирования
- Разработка автотестов в Selenium

**Нагрузочное тестирование**

- Разработка модели нагрузочного тестирование
- Разработка сценариев нагрузочного тестирования на *JMeter*
- Разработка сценариев нагрузочного тестирования в *Load Runner*

**Документирование**

- Написание чек-листов
- Написание тест-кейсов
- Разработка тест-планов
- Планирование работы и оценка трудозатрат
- Локализация и документирование дефектов
- Отчётность по результатам тестирования
- Оценка тестового покрытия, метрики в тестировании

**Тестирование юзабилити**

- Экспертиза в UХ
- Проведение юзабилити-тестов
- Платформо-ориентированное тестирование

**Тестирование веб-сервисов**

- Тестирование безопасности веб-сервисов
- Тестирование мобильных приложений
- Тестирование баз данных

----------------------------------------------------------------------------------------------------
<!--i ["tech Skills"]-->
# Tech Skills

- Администрирование Windows
- Администрирование Linux, Unix
- Администрирование Mac OS X
- Основы сетевых технологий
- Любые языки программирования
- Интернет технологии (HTML, CSS, HTTP , response codes)
- Инструменты виртуализации (VMware, VirtualBox, MS Virtual PC)
- Стандарты обеспечения качества (ISO)
- Базовые знания бизнес областей (Finance, Travel, Health Care etc.)

----------------------------------------------------------------------------------------------------
<!--i ["принципы тестирования ПО"]-->
# Принципы тестирования ПО

Семь принципов тестирования

- Принцип 1 – Исчерпывающее тестирование недостижимо
- Принцип 2 – Тестирование демонстрирует наличие дефектов, но не их отсутствие
- Принцип 3 – Раннее тестирование эффективно
- Принцип 4 – Накопление дефектов
- Принцип 5 – Парадокс пестицида
- Принцип 6 – Тестирование зависит от контекста
- Принцип 7 – Заблуждение об отсутствии ошибок

----------------------------------------------------------------------------------------------------
<!--i ["стандарты"]-->
# Стандарты

**ИСО** (ISO) - международная организация по стандартизации.

**IEEE** (ай-трипл-и) - институт инженеров по электротехнике и электроники.

**ГОСТ Р ИСО/МЭК 2510-2015** - информационные технологии (IT). Системная и программная инженерия.
Требования и оценка качества систем и программного обеспечения (SQuaRE). Mодели качества систем и
программных продуктов.

**ГОСТ Р 56920-2016/ISO/IEC/IEEE 29119:2013**- Системная и программная инженерия. Тестирование 
программного обеспечения.

----------------------------------------------------------------------------------------------------
<!--i ["QA,QC, testing"]-->
# QA,QC, testing

**Обеспечение качества** (Quality Assurance - QA) - это совокупность мероприятий, охватывающих все
технологические этапы разработки, выпуска и эксплуатации программного обеспечения (ПО)
информационных систем, предпринимаемых на разных стадиях жизненного цикла ПО для
обеспечения требуемого уровня качества выпускаемого продукта.

**Контроль качества** (Quality Control - QC) - это совокупность действий, проводимых над
продуктом в процессе разработки для получения информации о его актуальном состоянии в
разрезах: "готовность продукта к выпуску", "соответствие зафиксированным требованиям",
"соответствие заявленному уровню качества продукта".


<!--i ["обязанности QA"]-->
## Обязанности QA

- Формирование критериев качества
- Планирование мероприятий по соблюдению критериев на каждом этапе разработки продукта
- Выбор инструментов тестирования
- Тестирование продукта
- Расчет KPI
- Предотвращение появления ошибок и усовершенствование процесса

----------------------------------------------------------------------------------------------------
